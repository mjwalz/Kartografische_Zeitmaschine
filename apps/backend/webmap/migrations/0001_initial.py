# Generated by Django 5.2.4 on 2025-07-22 09:33

import django.contrib.gis.db.models.fields
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Layer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Display name of the layer', max_length=200)),
                ('layer_type', models.CharField(choices=[('vector', 'Vector'), ('raster', 'Raster'), ('tile', 'Tile'), ('geojson', 'GeoJSON')], default='vector', help_text='Type of layer (vector, raster, etc.)', max_length=50)),
                ('opacity', models.FloatField(default=1.0, help_text='Layer opacity (0.0 to 1.0)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('style_config', models.JSONField(blank=True, default=dict, help_text='JSON configuration for layer styling (colors, symbols, etc.)')),
                ('time_from', models.DateField(blank=True, help_text='Temporal start date - layer exists from this time', null=True)),
                ('time_to', models.DateField(blank=True, help_text='Temporal end date - layer exists until this time', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'layers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GeoData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the dataset', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Description of the geographic dataset')),
                ('source_url', models.URLField(blank=True, help_text='URL of the original data source')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('layer', models.OneToOneField(help_text='The layer that visualizes this geodata', on_delete=django.db.models.deletion.CASCADE, related_name='geodata', to='webmap.layer')),
            ],
            options={
                'verbose_name': 'Geographic Data',
                'verbose_name_plural': 'Geographic Data',
                'db_table': 'geodata',
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(help_text='Geometric representation (Point, LineString, Polygon, etc.)', srid=4326)),
                ('attributes', models.JSONField(blank=True, default=dict, help_text='Feature properties and attributes as JSON')),
                ('zoom_range', models.CharField(blank=True, help_text="Zoom level range where feature is visible (e.g., '5-15')", max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('geodata', models.ForeignKey(help_text='The geodata collection this feature belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='features', to='webmap.geodata')),
            ],
            options={
                'db_table': 'features',
                'indexes': [models.Index(fields=['geometry'], name='features_geometr_b9bcdc_idx'), models.Index(fields=['geodata', 'created_at'], name='features_geodata_6f4323_idx')],
            },
        ),
    ]
